trigger: 
- main
- feature/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'
  packageProject: 'Wholething.FallbackTextProperty/Wholething.FallbackTextProperty.csproj'
  major: 0
  minor: 2
  patch: $[counter(format('{0}.{1}', variables['Major'], variables['Minor']), 0)] # this will reset when major/minor changes
  isMain: $[eq(variables['Build.SourceBranchName'], 'main')]
  ${{ if isMain] }}:
    NugetVersion: $(major).$(minor).$(patch)
  ${{ if not(isMain) }}: 
    NugetVersion: $(major).$(minor).$(patch)-pre

steps:

- task: PowerShell@2
  displayName: Display branch
  inputs:
    targetType: 'inline'
    script: 'Write-Host "Branch: $(Build.SourceBranchName)"' 

- task: PowerShell@2
  displayName: Display isMain
  inputs:
    targetType: 'inline'
    script: 'Write-Host "isMain: $(isMain)"' 

- task: PowerShell@2
  displayName: Display NuGet version
  inputs:
    targetType: 'inline'
    script: 'Write-Host "Branch: $(NugetVersion)"' 

- task: DotNetCoreCLI@2
  displayName: 'dotnet nuget restore'
  inputs:
    command: 'restore'
    projects: '$(packageProject)'
    feedsToUse: 'select'
    vstsFeed: 'b4b8b301-4ace-4256-ac3f-157fab01270d/64c08c39-afb1-4c5c-88bc-d8492ccb47f3'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '$(packageProject)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet nuget pack'
  inputs:
    command: 'pack'
    packagesToPack: '$(packageProject)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'NugetVersion'

- task: DotNetCoreCLI@2
  displayName: 'dotnet nuget push'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'b4b8b301-4ace-4256-ac3f-157fab01270d/64c08c39-afb1-4c5c-88bc-d8492ccb47f3'